// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct Folder: Codable {
    /// The ID of the folder. (Read Only)
    public var id: String?
    /// The path on the server for the folder. (Read Only)
    public var fullPath: String?
    /// The ID of the library the folder belongs to. (Read Only)
    public var libraryID: String?
    /// The time (in ms since POSIX epoch) when the folder was added. (Read Only)
    public var addedAt: Int?

    public init(id: String? = nil, fullPath: String? = nil, libraryID: String? = nil, addedAt: Int? = nil) {
        self.id = id
        self.fullPath = fullPath
        self.libraryID = libraryID
        self.addedAt = addedAt
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.id = try values.decodeIfPresent(String.self, forKey: "id")
        self.fullPath = try values.decodeIfPresent(String.self, forKey: "fullPath")
        self.libraryID = try values.decodeIfPresent(String.self, forKey: "libraryId")
        self.addedAt = try values.decodeIfPresent(Int.self, forKey: "addedAt")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(id, forKey: "id")
        try values.encodeIfPresent(fullPath, forKey: "fullPath")
        try values.encodeIfPresent(libraryID, forKey: "libraryId")
        try values.encodeIfPresent(addedAt, forKey: "addedAt")
    }
}
