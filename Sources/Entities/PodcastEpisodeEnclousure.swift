// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct PodcastEpisodeEnclousure: Codable {
    /// The URL where the podcast episode's audio file was downloaded from.
    public var url: String?
    /// The MIME type of the podcast episode's audio file.
    public var type: String?
    /// The size (in bytes) that was reported when downloading the podcast episode's audio file.
    public var length: String?

    public init(url: String? = nil, type: String? = nil, length: String? = nil) {
        self.url = url
        self.type = type
        self.length = length
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.url = try values.decodeIfPresent(String.self, forKey: "url")
        self.type = try values.decodeIfPresent(String.self, forKey: "type")
        self.length = try values.decodeIfPresent(String.self, forKey: "length")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(url, forKey: "url")
        try values.encodeIfPresent(type, forKey: "type")
        try values.encodeIfPresent(length, forKey: "length")
    }
}
