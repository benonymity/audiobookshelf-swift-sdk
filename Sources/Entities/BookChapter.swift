// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct BookChapter: Codable {
    /// The ID of the book chapter.
    public var id: Int?
    /// When in the book (in seconds) the chapter starts.
    public var start: Int?
    /// When in the book (in seconds) the chapter ends.
    public var end: Double?
    /// The title of the chapter.
    public var title: String?

    public init(id: Int? = nil, start: Int? = nil, end: Double? = nil, title: String? = nil) {
        self.id = id
        self.start = start
        self.end = end
        self.title = title
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.id = try values.decodeIfPresent(Int.self, forKey: "id")
        self.start = try values.decodeIfPresent(Int.self, forKey: "start")
        self.end = try values.decodeIfPresent(Double.self, forKey: "end")
        self.title = try values.decodeIfPresent(String.self, forKey: "title")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(id, forKey: "id")
        try values.encodeIfPresent(start, forKey: "start")
        try values.encodeIfPresent(end, forKey: "end")
        try values.encodeIfPresent(title, forKey: "title")
    }
}
