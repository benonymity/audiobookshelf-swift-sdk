// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct SeriesSequence: Codable {
    /// The ID of the series.
    public var id: String?
    /// The name of the series.
    public var name: String?
    /// The position in the series the book is.
    public var sequence: String?

    public init(id: String? = nil, name: String? = nil, sequence: String? = nil) {
        self.id = id
        self.name = name
        self.sequence = sequence
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.id = try values.decodeIfPresent(String.self, forKey: "id")
        self.name = try values.decodeIfPresent(String.self, forKey: "name")
        self.sequence = try values.decodeIfPresent(String.self, forKey: "sequence")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(id, forKey: "id")
        try values.encodeIfPresent(name, forKey: "name")
        try values.encodeIfPresent(sequence, forKey: "sequence")
    }
}
